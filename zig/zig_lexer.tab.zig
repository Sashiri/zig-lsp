const Lexer = @import("zig_lexer.zig").Lexer;
pub const Id = @import("zig_grammar.tokens.zig").Id;


pub const init_state align(64) = [128]u16{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 297, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 298, 3, 0, 4, 5, 299, 300, 301, 6, 8, 302, 10, 12, 14, 15, 21, 21, 21, 21, 21, 21, 21, 21, 21, 303, 304, 39, 41, 42, 305, 44, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 49, 52, 306, 53, 48, 0, 54, 77, 82, 102, 107, 132, 48, 48, 140, 48, 48, 147, 48, 158, 174, 180, 48, 194, 204, 228, 246, 281, 291, 48, 48, 48, 307, 296, 308, 309, 0};

pub const accept_states = [348]u8{0, 119, 22, 0, 35, 2, 5, 8, 40, 43, 30, 33, 14, 17, 56, 110, 0, 112, 0, 0, 112, 110, 0, 0, 114, 0, 110, 0, 110, 0, 110, 0, 111, 0, 0, 111, 0, 0, 113, 24, 25, 19, 48, 49, 0, 0, 0, 117, 115, 28, 0, 0, 0, 10, 115, 115, 115, 115, 59, 115, 115, 115, 115, 115, 115, 60, 115, 61, 115, 62, 115, 115, 63, 115, 115, 115, 64, 115, 115, 115, 115, 65, 125, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 115, 115, 115, 115, 71, 115, 115, 115, 72, 115, 115, 73, 115, 115, 115, 115, 115, 115, 74, 115, 75, 115, 115, 115, 115, 76, 115, 115, 115, 77, 115, 115, 115, 115, 78, 79, 115, 80, 115, 81, 115, 115, 115, 115, 82, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 93, 115, 115, 115, 115, 115, 115, 83, 115, 115, 115, 115, 115, 84, 115, 115, 85, 115, 86, 115, 115, 115, 87, 115, 115, 115, 115, 115, 88, 115, 115, 115, 115, 115, 89, 115, 90, 115, 115, 115, 115, 115, 91, 115, 115, 115, 92, 115, 115, 115, 115, 115, 115, 115, 115, 94, 115, 115, 115, 95, 115, 115, 115, 115, 115, 96, 115, 115, 115, 115, 97, 115, 115, 115, 98, 115, 115, 115, 115, 115, 115, 115, 115, 115, 99, 115, 115, 100, 101, 115, 115, 115, 115, 115, 115, 115, 115, 102, 115, 115, 103, 115, 115, 115, 115, 115, 115, 115, 115, 104, 115, 105, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 106, 115, 115, 107, 115, 115, 115, 115, 115, 115, 108, 115, 115, 115, 115, 109, 37, 1, 124, 123, 29, 54, 13, 12, 55, 47, 53, 118, 52, 58, 23, 126, 36, 3, 4, 6, 7, 9, 41, 42, 44, 31, 32, 34, 15, 16, 18, 120, 57, 27, 26, 20, 21, 51, 50, 116, 46, 45, 121, 11, 122, 67, 66, 68, 69, 70, 39, 38};

pub const rle_states = [_]u16{32, 32, 1, 65535, 61, 61, 310, 65535, 33, 33, 311, 65535, 61, 61, 312, 65535, 38, 38, 313, 61, 61, 314, 65535, 37, 37, 7, 42, 42, 315, 61, 61, 316, 65535, 37, 37, 0, 42, 42, 0, 61, 61, 317, 65535, 37, 37, 9, 43, 43, 318, 61, 61, 319, 65535, 37, 37, 0, 43, 43, 0, 61, 61, 320, 65535, 37, 37, 11, 61, 61, 321, 62, 62, 322, 65535, 37, 37, 0, 61, 61, 323, 62, 62, 0, 65535, 42, 42, 324, 46, 46, 13, 63, 63, 325, 65535, 42, 42, 0, 46, 46, 326, 63, 63, 0, 65535, 47, 47, 327, 61, 61, 328, 65535, 46, 46, 16, 48, 57, 21, 80, 80, 22, 98, 98, 25, 111, 111, 27, 112, 112, 22, 120, 120, 29, 65535, 46, 46, 0, 48, 57, 17, 80, 80, 0, 98, 98, 0, 111, 112, 0, 120, 120, 0, 65535, 80, 80, 18, 112, 112, 18, 65535, 43, 43, 19, 45, 45, 19, 48, 57, 20, 80, 80, 0, 112, 112, 0, 65535, 43, 43, 0, 45, 45, 0, 65535, 43, 43, 0, 45, 45, 0, 65535, 46, 46, 16, 48, 57, 21, 80, 80, 22, 98, 98, 0, 111, 111, 0, 112, 112, 22, 120, 120, 0, 65535, 43, 43, 23, 45, 45, 23, 46, 46, 0, 48, 57, 24, 80, 80, 0, 98, 98, 0, 111, 112, 0, 120, 120, 0, 65535, 43, 43, 0, 45, 45, 0, 65535, 43, 43, 0, 45, 45, 0, 65535, 46, 46, 0, 48, 49, 26, 50, 57, 0, 80, 80, 0, 98, 98, 0, 111, 112, 0, 120, 120, 0, 65535, 65535, 46, 46, 0, 48, 55, 28, 56, 57, 0, 80, 80, 0, 98, 98, 0, 111, 112, 0, 120, 120, 0, 65535, 65535, 46, 46, 0, 48, 57, 30, 65, 70, 30, 80, 80, 0, 97, 102, 30, 111, 112, 0, 120, 120, 0, 65535, 46, 46, 31, 80, 80, 36, 112, 112, 36, 65535, 46, 46, 0, 48, 57, 32, 65, 70, 32, 80, 80, 0, 97, 102, 32, 112, 112, 0, 65535, 80, 80, 33, 112, 112, 33, 65535, 43, 43, 34, 45, 45, 34, 48, 57, 35, 65, 70, 35, 80, 80, 0, 97, 102, 35, 112, 112, 0, 65535, 43, 43, 0, 45, 45, 0, 65535, 43, 43, 0, 45, 45, 0, 65535, 43, 43, 37, 45, 45, 37, 46, 46, 0, 48, 57, 38, 65, 70, 38, 80, 80, 0, 97, 102, 38, 112, 112, 0, 65535, 43, 43, 0, 45, 45, 0, 65535, 43, 43, 0, 45, 45, 0, 65535, 60, 60, 40, 61, 61, 329, 65535, 60, 60, 0, 61, 61, 330, 65535, 61, 61, 331, 62, 62, 332, 65535, 61, 61, 333, 62, 62, 43, 65535, 61, 61, 334, 62, 62, 0, 65535, 34, 34, 45, 65, 90, 47, 95, 95, 47, 97, 122, 47, 65535, 34, 34, 0, 65, 90, 46, 95, 95, 46, 97, 122, 46, 65535, 34, 34, 335, 48, 57, 46, 65535, 34, 34, 0, 48, 57, 47, 65535, 48, 57, 48, 65, 90, 48, 95, 95, 48, 97, 122, 48, 65535, 42, 42, 50, 65535, 42, 42, 0, 93, 93, 336, 99, 99, 51, 65535, 93, 93, 337, 99, 99, 0, 65535, 92, 92, 338, 65535, 61, 61, 339, 65535, 48, 57, 48, 65, 90, 48, 95, 95, 48, 97, 107, 48, 108, 108, 55, 109, 109, 48, 110, 110, 66, 111, 114, 48, 115, 115, 68, 116, 118, 48, 119, 119, 73, 120, 122, 48, 65535, 105, 105, 56, 108, 108, 59, 110, 110, 48, 115, 115, 48, 119, 119, 48, 65535, 103, 103, 57, 105, 105, 48, 108, 108, 48, 65535, 103, 103, 48, 110, 110, 58, 65535, 110, 110, 48, 65535, 105, 105, 48, 108, 108, 48, 111, 111, 60, 65535, 111, 111, 48, 119, 119, 61, 65535, 119, 119, 48, 122, 122, 62, 65535, 101, 101, 63, 122, 122, 48, 65535, 101, 101, 48, 114, 114, 64, 65535, 111, 111, 65, 114, 114, 48, 65535, 111, 111, 48, 65535, 100, 100, 67, 108, 108, 48, 110, 110, 48, 115, 115, 48, 119, 119, 48, 65535, 100, 100, 48, 65535, 108, 108, 48, 109, 109, 69, 110, 110, 48, 115, 115, 48, 119, 119, 48, 121, 121, 70, 65535, 109, 109, 48, 121, 121, 48, 65535, 109, 109, 48, 110, 110, 71, 121, 121, 48, 65535, 99, 99, 72, 110, 110, 48, 65535, 99, 99, 48, 65535, 97, 97, 74, 108, 108, 48, 110, 110, 48, 115, 115, 48, 119, 119, 48, 65535, 97, 97, 48, 105, 105, 75, 65535, 105, 105, 48, 116, 116, 76, 65535, 116, 116, 48, 65535, 48, 57, 48, 65, 90, 48, 95, 95, 48, 97, 113, 48, 114, 114, 78, 115, 122, 48, 65535, 101, 101, 79, 114, 114, 48, 65535, 97, 97, 80, 101, 101, 48, 65535, 97, 97, 48, 107, 107, 81, 65535, 107, 107, 48, 65535, 92, 92, 83, 97, 97, 84, 111, 111, 90, 65535, 92, 92, 340, 97, 97, 0, 111, 111, 0, 65535, 92, 92, 0, 97, 97, 0, 110, 110, 85, 111, 111, 0, 116, 116, 88, 65535, 99, 99, 86, 110, 110, 0, 116, 116, 0, 65535, 99, 99, 0, 101, 101, 87, 65535, 101, 101, 0, 108, 108, 341, 65535, 99, 99, 89, 110, 110, 0, 116, 116, 0, 65535, 99, 99, 0, 104, 104, 342, 65535, 92, 92, 0, 97, 97, 0, 109, 109, 91, 110, 110, 96, 111, 111, 0, 65535, 109, 110, 0, 112, 112, 92, 65535, 112, 112, 0, 116, 116, 93, 65535, 105, 105, 94, 116, 116, 0, 65535, 105, 105, 0, 109, 109, 95, 65535, 101, 101, 343, 109, 109, 0, 65535, 109, 110, 0, 115, 115, 97, 116, 116, 98, 65535, 115, 115, 0, 116, 116, 344, 65535, 105, 105, 99, 115, 116, 0, 65535, 105, 105, 0, 110, 110, 100, 65535, 110, 110, 0, 117, 117, 101, 65535, 101, 101, 345, 117, 117, 0, 65535, 48, 57, 48, 65, 90, 48, 95, 95, 48, 97, 100, 48, 101, 101, 103, 102, 122, 48, 65535, 101, 101, 48, 102, 102, 104, 65535, 101, 101, 105, 102, 102, 48, 65535, 101, 101, 48, 114, 114, 106, 65535, 114, 114, 48, 65535, 48, 57, 48, 65, 90, 48, 95, 95, 48, 97, 107, 48, 108, 108, 108, 109, 109, 48, 110, 110, 111, 111, 113, 48, 114, 114, 114, 115, 119, 48, 120, 120, 123, 121, 122, 48, 65535, 108, 108, 48, 110, 110, 48, 114, 114, 48, 115, 115, 109, 120, 120, 48, 65535, 101, 101, 110, 115, 115, 48, 65535, 101, 101, 48, 65535, 108, 108, 48, 110, 110, 48, 114, 114, 48, 117, 117, 112, 120, 120, 48, 65535, 109, 109, 113, 117, 117, 48, 65535, 109, 109, 48, 65535, 108, 108, 48, 110, 110, 48, 114, 114, 115, 120, 120, 48, 65535, 100, 100, 116, 111, 111, 121, 114, 114, 48, 65535, 100, 100, 48, 101, 101, 117, 111, 111, 48, 65535, 101, 101, 48, 102, 102, 118, 65535, 101, 101, 119, 102, 102, 48, 65535, 101, 101, 48, 114, 114, 120, 65535, 114, 114, 48, 65535, 100, 100, 48, 111, 111, 48, 114, 114, 122, 65535, 114, 114, 48, 65535, 108, 108, 48, 110, 110, 48, 112, 112, 124, 114, 114, 48, 116, 116, 128, 120, 120, 48, 65535, 111, 111, 125, 112, 112, 48, 116, 116, 48, 65535, 111, 111, 48, 114, 114, 126, 65535, 114, 114, 48, 116, 116, 127, 65535, 116, 116, 48, 65535, 101, 101, 129, 112, 112, 48, 116, 116, 48, 65535, 101, 101, 48, 114, 114, 130, 65535, 110, 110, 131, 114, 114, 48, 65535, 110, 110, 48, 65535, 48, 57, 48, 65, 90, 48, 95, 95, 48, 97, 97, 133, 98, 109, 48, 110, 110, 137, 111, 111, 138, 112, 122, 48, 65535, 97, 97, 48, 108, 108, 134, 110, 111, 48, 65535, 108, 108, 48, 115, 115, 135, 65535, 101, 101, 136, 115, 115, 48, 65535, 101, 101, 48, 65535, 97, 97, 48, 110, 111, 48, 65535, 97, 97, 48, 110, 111, 48, 114, 114, 139, 65535, 114, 114, 48, 65535, 48, 57, 48, 65, 90, 48, 95, 95, 48, 97, 101, 48, 102, 102, 141, 103, 109, 48, 110, 110, 142, 111, 122, 48, 65535, 102, 102, 48, 110, 110, 48, 65535, 102, 102, 48, 108, 108, 143, 110, 110, 48, 65535, 105, 105, 144, 108, 108, 48, 65535, 105, 105, 48, 110, 110, 145, 65535, 101, 101, 146, 110, 110, 48, 65535, 101, 101, 48, 65535, 48, 57, 48, 65, 90, 48, 95, 95, 48, 97, 104, 48, 105, 105, 148, 106, 122, 48, 65535, 105, 105, 48, 110, 110, 149, 65535, 107, 107, 150, 110, 110, 48, 65535, 107, 107, 48, 115, 115, 151, 65535, 101, 101, 152, 115, 115, 48, 65535, 99, 99, 153, 101, 101, 48, 65535, 99, 99, 48, 116, 116, 154, 65535, 105, 105, 155, 116, 116, 48, 65535, 105, 105, 48, 111, 111, 156, 65535, 110, 110, 157, 111, 111, 48, 65535, 110, 110, 48, 65535, 48, 57, 48, 65, 90, 48, 95, 95, 48, 97, 97, 159, 98, 110, 48, 111, 111, 165, 112, 116, 48, 117, 117, 171, 118, 122, 48, 65535, 97, 97, 48, 107, 107, 160, 111, 111, 48, 117, 117, 48, 65535, 101, 101, 161, 107, 107, 48, 65535, 100, 100, 162, 101, 101, 48, 65535, 99, 99, 163, 100, 100, 48, 65535, 99, 99, 164, 65535, 99, 99, 48, 65535, 97, 97, 166, 111, 111, 48, 117, 117, 48, 65535, 97, 97, 48, 108, 108, 167, 65535, 105, 105, 168, 108, 108, 48, 65535, 97, 97, 169, 105, 105, 48, 65535, 97, 97, 48, 115, 115, 170, 65535, 115, 115, 48, 65535, 97, 97, 48, 108, 108, 172, 111, 111, 48, 117, 117, 48, 65535, 108, 108, 173, 65535, 108, 108, 48, 65535, 48, 57, 48, 65, 90, 48, 95, 95, 48, 97, 113, 48, 114, 114, 175, 115, 122, 48, 65535, 101, 101, 176, 114, 114, 48, 65535, 101, 101, 48, 108, 108, 177, 65535, 108, 108, 48, 115, 115, 178, 65535, 101, 101, 179, 115, 115, 48, 65535, 101, 101, 48, 65535, 48, 57, 48, 65, 90, 48, 95, 95, 48, 97, 97, 181, 98, 113, 48, 114, 114, 186, 115, 116, 48, 117, 117, 192, 118, 122, 48, 65535, 97, 97, 48, 99, 99, 182, 114, 114, 48, 117, 117, 48, 65535, 99, 99, 48, 107, 107, 183, 65535, 101, 101, 184, 107, 107, 48, 65535, 100, 100, 185, 101, 101, 48, 65535, 100, 100, 48, 65535, 97, 97, 48, 111, 111, 187, 114, 114, 48, 117, 117, 48, 65535, 109, 109, 188, 111, 111, 48, 65535, 105, 105, 189, 109, 109, 48, 65535, 105, 105, 48, 115, 115, 190, 65535, 101, 101, 191, 115, 115, 48, 65535, 101, 101, 48, 65535, 97, 97, 48, 98, 98, 193, 114, 114, 48, 117, 117, 48, 65535, 98, 98, 48, 65535, 48, 57, 48, 65, 90, 48, 95, 95, 48, 97, 100, 48, 101, 101, 195, 102, 122, 48, 65535, 101, 101, 48, 115, 115, 196, 116, 116, 200, 65535, 115, 116, 48, 117, 117, 197, 65535, 109, 109, 198, 117, 117, 48, 65535, 101, 101, 199, 109, 109, 48, 65535, 101, 101, 48, 65535, 115, 116, 48, 117, 117, 201, 65535, 114, 114, 202, 117, 117, 48, 65535, 110, 110, 203, 114, 114, 48, 65535, 110, 110, 48, 65535, 48, 57, 48, 65, 90, 48, 95, 95, 48, 97, 115, 48, 116, 116, 205, 117, 117, 217, 118, 118, 48, 119, 119, 223, 120, 122, 48, 65535, 100, 100, 206, 114, 114, 213, 116, 117, 48, 119, 119, 48, 65535, 99, 99, 207, 100, 100, 48, 114, 114, 48, 65535, 97, 97, 208, 99, 99, 48, 65535, 97, 97, 48, 108, 108, 209, 65535, 108, 108, 210, 65535, 99, 99, 211, 108, 108, 48, 65535, 99, 99, 212, 65535, 99, 99, 48, 65535, 100, 100, 48, 114, 114, 48, 117, 117, 214, 65535, 99, 99, 215, 117, 117, 48, 65535, 99, 99, 48, 116, 116, 216, 65535, 116, 116, 48, 65535, 115, 115, 218, 116, 117, 48, 119, 119, 48, 65535, 112, 112, 219, 115, 115, 48, 65535, 101, 101, 220, 112, 112, 48, 65535, 101, 101, 48, 110, 110, 221, 65535, 100, 100, 222, 110, 110, 48, 65535, 100, 100, 48, 65535, 105, 105, 224, 116, 117, 48, 119, 119, 48, 65535, 105, 105, 48, 116, 116, 225, 65535, 99, 99, 226, 116, 116, 48, 65535, 99, 99, 48, 104, 104, 227, 65535, 104, 104, 48, 65535, 48, 57, 48, 65, 90, 48, 95, 95, 48, 97, 100, 48, 101, 101, 229, 102, 103, 48, 104, 104, 232, 105, 113, 48, 114, 114, 242, 115, 122, 48, 65535, 101, 101, 48, 104, 104, 48, 114, 114, 48, 115, 115, 230, 65535, 115, 115, 48, 116, 116, 231, 65535, 116, 116, 48, 65535, 101, 101, 48, 104, 104, 48, 114, 114, 233, 65535, 101, 101, 234, 114, 114, 48, 65535, 97, 97, 235, 101, 101, 48, 65535, 97, 97, 48, 100, 100, 236, 65535, 100, 100, 48, 108, 108, 237, 65535, 108, 108, 48, 111, 111, 238, 65535, 99, 99, 239, 111, 111, 48, 65535, 97, 97, 240, 99, 99, 48, 65535, 97, 97, 48, 108, 108, 241, 65535, 108, 108, 48, 65535, 101, 101, 48, 104, 104, 48, 114, 114, 48, 117, 117, 243, 121, 121, 245, 65535, 101, 101, 244, 117, 117, 48, 121, 121, 48, 65535, 101, 101, 48, 65535, 117, 117, 48, 121, 121, 48, 65535, 48, 57, 48, 65, 90, 48, 95, 95, 48, 97, 109, 48, 110, 110, 247, 111, 114, 48, 115, 115, 267, 116, 122, 48, 65535, 100, 100, 248, 105, 105, 255, 110, 110, 48, 114, 114, 258, 115, 115, 48, 65535, 100, 100, 48, 101, 101, 249, 105, 105, 48, 114, 114, 48, 65535, 101, 101, 48, 102, 102, 250, 65535, 102, 102, 48, 105, 105, 251, 65535, 105, 105, 48, 110, 110, 252, 65535, 101, 101, 253, 110, 110, 48, 65535, 100, 100, 254, 101, 101, 48, 65535, 100, 100, 48, 65535, 100, 100, 48, 105, 105, 48, 111, 111, 256, 114, 114, 48, 65535, 110, 110, 257, 111, 111, 48, 65535, 110, 110, 48, 65535, 100, 100, 48, 101, 101, 259, 105, 105, 48, 114, 114, 48, 65535, 97, 97, 260, 101, 101, 48, 65535, 97, 97, 48, 99, 99, 261, 65535, 99, 99, 48, 104, 104, 262, 65535, 97, 97, 263, 104, 104, 48, 65535, 97, 97, 48, 98, 98, 264, 65535, 98, 98, 48, 108, 108, 265, 65535, 101, 101, 266, 108, 108, 48, 65535, 101, 101, 48, 65535, 101, 101, 268, 105, 105, 269, 110, 110, 48, 115, 115, 48, 65535, 101, 101, 48, 105, 105, 48, 65535, 101, 101, 48, 105, 105, 48, 110, 110, 270, 65535, 103, 103, 271, 110, 110, 48, 65535, 103, 103, 48, 110, 110, 272, 65535, 97, 97, 273, 110, 110, 48, 65535, 97, 97, 48, 109, 109, 274, 65535, 101, 101, 275, 109, 109, 48, 65535, 101, 101, 48, 115, 115, 276, 65535, 112, 112, 277, 115, 115, 48, 65535, 97, 97, 278, 112, 112, 48, 65535, 97, 97, 48, 99, 99, 279, 65535, 99, 99, 48, 101, 101, 280, 65535, 101, 101, 48, 65535, 48, 57, 48, 65, 90, 48, 95, 95, 48, 97, 97, 282, 98, 110, 48, 111, 111, 284, 112, 122, 48, 65535, 97, 97, 48, 111, 111, 48, 114, 114, 283, 65535, 114, 114, 48, 65535, 97, 97, 48, 108, 108, 285, 111, 111, 48, 65535, 97, 97, 286, 108, 108, 48, 65535, 97, 97, 48, 116, 116, 287, 65535, 105, 105, 288, 116, 116, 48, 65535, 105, 105, 48, 108, 108, 289, 65535, 101, 101, 290, 108, 108, 48, 65535, 101, 101, 48, 65535, 48, 57, 48, 65, 90, 48, 95, 95, 48, 97, 103, 48, 104, 104, 292, 105, 122, 48, 65535, 104, 104, 48, 105, 105, 293, 65535, 105, 105, 48, 108, 108, 294, 65535, 101, 101, 295, 108, 108, 48, 65535, 101, 101, 48, 65535, 61, 61, 346, 124, 124, 347, 65535, 0, 127, 0, 65535, 0, 0};

pub const rle_indices = [348]u16{65535, 0, 4, 8, 12, 16, 23, 33, 43, 53, 63, 73, 83, 93, 103, 110, 132, 151, 158, 174, 181, 188, 210, 235, 242, 249, 271, 272, 294, 295, 317, 327, 346, 353, 375, 382, 389, 414, 421, 428, 435, 442, 449, 456, 463, 476, 489, 496, 503, 516, 520, 530, 537, 541, 545, 582, 598, 608, 615, 619, 629, 636, 643, 650, 657, 664, 668, 684, 688, 707, 714, 724, 731, 735, 751, 758, 765, 769, 788, 795, 802, 809, 813, 823, 833, 849, 859, 866, 873, 883, 890, 906, 913, 920, 927, 934, 941, 951, 958, 965, 972, 979, 986, 1005, 1012, 1019, 1026, 1030, 1067, 1083, 1090, 1094, 1110, 1117, 1121, 1134, 1144, 1154, 1161, 1168, 1175, 1179, 1189, 1193, 1212, 1222, 1229, 1236, 1240, 1250, 1257, 1264, 1268, 1293, 1303, 1310, 1317, 1321, 1328, 1338, 1342, 1367, 1374, 1384, 1391, 1398, 1405, 1409, 1428, 1435, 1442, 1449, 1456, 1463, 1470, 1477, 1484, 1491, 1495, 1523, 1536, 1543, 1550, 1557, 1561, 1565, 1575, 1582, 1589, 1596, 1603, 1607, 1620, 1624, 1628, 1647, 1654, 1661, 1668, 1675, 1679, 1707, 1720, 1727, 1734, 1741, 1745, 1758, 1765, 1772, 1779, 1786, 1790, 1803, 1807, 1826, 1836, 1843, 1850, 1857, 1861, 1868, 1875, 1882, 1886, 1914, 1927, 1937, 1944, 1951, 1955, 1962, 1966, 1970, 1980, 1987, 1994, 1998, 2008, 2015, 2022, 2029, 2036, 2040, 2050, 2057, 2064, 2071, 2075, 2106, 2119, 2126, 2130, 2140, 2147, 2154, 2161, 2168, 2175, 2182, 2189, 2196, 2200, 2216, 2226, 2230, 2237, 2262, 2278, 2291, 2298, 2305, 2312, 2319, 2326, 2330, 2343, 2350, 2354, 2367, 2374, 2381, 2388, 2395, 2402, 2409, 2416, 2420, 2433, 2440, 2450, 2457, 2464, 2471, 2478, 2485, 2492, 2499, 2506, 2513, 2520, 2524, 2546, 2556, 2560, 2570, 2577, 2584, 2591, 2598, 2605, 2609, 2628, 2635, 2642, 2649, 2653, 2660, 2660, 2660, 2660, 2660, 2660, 2660, 2660, 2660, 2660, 2660, 2660, 2660, 2660, 2660, 2660, 2660, 2660, 2660, 2660, 2660, 2660, 2660, 2660, 2660, 2660, 2660, 2660, 2660, 2660, 2660, 2660, 2660, 2660, 2660, 2660, 2660, 2660, 2663, 2663, 2663, 2663, 2663, 2663, 2663, 2663, 2663, 2663, 2663, 2663, 2663};

pub const accept_tokens = [_]Id{.Invalid, .Newline, .Ampersand, .AmpersandAmpersand, .AmpersandEqual, .Asterisk, .AsteriskAsterisk, .AsteriskEqual, .AsteriskPercent, .AsteriskPercentEqual, .Caret, .CaretEqual, .Colon, .Comma, .Period, .PeriodAsterisk, .PeriodQuestionMark, .Ellipsis2, .Ellipsis3, .Equal, .EqualEqual, .EqualAngleBracketRight, .Bang, .BangEqual, .AngleBracketLeft, .AngleBracketAngleBracketLeft, .AngleBracketAngleBracketLeftEqual, .AngleBracketLeftEqual, .LBracket, .LParen, .Minus, .MinusEqual, .MinusAngleBracketRight, .MinusPercent, .MinusPercentEqual, .Percent, .PercentEqual, .Pipe, .PipePipe, .PipeEqual, .Plus, .PlusPlus, .PlusEqual, .PlusPercent, .PlusPercentEqual, .BracketStarCBracket, .BracketStarBracket, .QuestionMark, .AngleBracketRight, .AngleBracketAngleBracketRight, .AngleBracketAngleBracketRightEqual, .AngleBracketRightEqual, .RBrace, .RBracket, .RParen, .Semicolon, .Slash, .SlashEqual, .Tilde, .Keyword_align, .Keyword_allowzero, .Keyword_and, .Keyword_asm, .Keyword_async, .Keyword_await, .Keyword_break, .Keyword_catch, .Keyword_cancel, .Keyword_comptime, .Keyword_const, .Keyword_continue, .Keyword_defer, .Keyword_else, .Keyword_enum, .Keyword_errdefer, .Keyword_error, .Keyword_export, .Keyword_extern, .Keyword_false, .Keyword_fn, .Keyword_for, .Keyword_if, .Keyword_inline, .Keyword_nakedcc, .Keyword_noalias, .Keyword_null, .Keyword_or, .Keyword_orelse, .Keyword_packed, .Keyword_promise, .Keyword_pub, .Keyword_resume, .Keyword_return, .Keyword_linksection, .Keyword_stdcallcc, .Keyword_struct, .Keyword_suspend, .Keyword_switch, .Keyword_test, .Keyword_threadlocal, .Keyword_true, .Keyword_try, .Keyword_undefined, .Keyword_union, .Keyword_unreachable, .Keyword_use, .Keyword_usingnamespace, .Keyword_var, .Keyword_volatile, .Keyword_while, .IntegerLiteral, .FloatLiteral, .FloatLiteral, .FloatLiteral, .FloatLiteral, .Identifier, .Identifier, .Builtin};

pub fn lexer_switch( self: *Lexer, accept: u8 ) Id {
  switch (accept) {
 0 => 
// LBrace
// %dfa {
{
    if(self.index == 1) return Id.LBrace;
    switch(self.source[self.index-2]) {
        ':', ' ', '\t', '\r', '\n' =>  return Id.LBrace,
        else => return Id.LCurly,
    }
},
 1 => 
// Space
// %dfa ( )+
{
    return Id.Ignore;
},
 2 => 
// Comments
// %dfa //
{
    var comment_id = Id.LineComment;

    if (self.peek == '/') {
        _ = self.getc();
        if (self.peek != '/') {
            comment_id = Id.DocComment;
        }
    }

    while (true) {
        switch (self.peek) {
            '\n', -1 => return comment_id,
            else => {},
        }
        _ = self.getc();
    }
},
 3 => 
// LineString
// %dfa \\\\
{
    while (true) {
        switch (self.peek) {
            '\n', -1 => return Id.LineString,
            else => {},
        }
        _ = self.getc();
    }
},
 4 => 
// LineCString
// %dfa c\\\\
{
    while (true) {
        switch (self.peek) {
            '\n', -1 => return Id.LineCString,
            else => {},
        }
        _ = self.getc();
    }
},
 5 => 
// CharLiteral
// %dfa '
{
    while (true) {
        switch (self.peek) {
            '\n', -1 => return Id.Invalid,
            '\\' => {
                _ = self.getc();
            },
            '\'' => {
                _ = self.getc();
                return Id.CharLiteral;
            },
            else => {},
        }
        _ = self.getc();
    }
},
 6 => 
// StringLiteral
// %dfa "
{
    while (true) {
        switch (self.peek) {
            '\n', -1 => {
                // TODO: error
                return Id.StringLiteral;
            },
            '\\' => {
                _ = self.getc();
            },
            '"' => {
                _ = self.getc();
                return Id.StringLiteral;
            },
            else => {},
        }
        _ = self.getc();
    }
},
 7 => 
// StringLiteral or Identifier
// %dfa c
{
    if(self.peek == '"') {
        _ = self.getc();
        while (true) {
            switch (self.peek) {
                '\n', -1 => {
                    // TODO: error
                    return Id.StringLiteral;
                },
                '\\' => {
                    _ = self.getc();
                },
                '"' => {
                    _ = self.getc();
                    return Id.StringLiteral;
                },
                else => {},
            }
            _ = self.getc();
        }
    }
    else {
        while (true) {
            switch (self.peek) {
                'a'...'z','A'...'Z','_' => {
                        _ = self.getc();
                        continue;
                },
                else => {
                    return Id.Identifier;
                },
            }
        }
    }
},
 8 => 
// ShebangLine
// %dfa #!
{
    if (self.index != 2)
        return Id.Invalid;

    while (true) {
        switch (self.peek) {
            '\n', -1 => return Id.ShebangLine,
            else => {},
        }
        _ = self.getc();
    }
},
else => unreachable,
}
return .Invalid;
}