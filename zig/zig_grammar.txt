0: $accept[#0] <- Root[#1] $eof[1]
1: Root[#1] <- MaybeRootDocComment[#4] MaybeContainerMembers[#6]
2: MaybeDocComment[#2] <- $epsilon[0]
3: MaybeDocComment[#2] <- DocCommentLines[#3]
4: DocCommentLines[#3] <- DocCommentLines[#3] DocComment[2]
5: DocCommentLines[#3] <- DocComment[2]
6: MaybeRootDocComment[#4] <- $epsilon[0]
7: MaybeRootDocComment[#4] <- RootDocCommentLines[#5]
8: RootDocCommentLines[#5] <- RootDocCommentLines[#5] RootDocComment[3]
9: RootDocCommentLines[#5] <- RootDocComment[3]
10: MaybeContainerMembers[#6] <- $epsilon[0]
11: MaybeContainerMembers[#6] <- ContainerMembers[#7]
12: ContainerMembers[#7] <- ContainerMembers[#7] ContainerMember[#8]
13: ContainerMembers[#7] <- ContainerMember[#8]
14: ContainerMember[#8] <- MaybeDocComment[#2] TestDecl[#9]
15: ContainerMember[#8] <- MaybeDocComment[#2] TopLevelComptime[#10]
16: ContainerMember[#8] <- MaybeDocComment[#2] MaybePub[#74] TopLevelDecl[#11]
17: ContainerMember[#8] <- MaybeDocComment[#2] MaybePub[#74] ContainerField[#15] Comma[4]
18: TestDecl[#9] <- Keyword_test[5] StringLiteral[6] Block[#30]
19: TopLevelComptime[#10] <- Keyword_comptime[7] BlockExpr[#29]
20: TopLevelDecl[#11] <- FnProto[#13] Semicolon[8]
21: TopLevelDecl[#11] <- FnProto[#13] Block[#30]
22: TopLevelDecl[#11] <- Keyword_extern[9] StringLiteral[6] FnProto[#13] Semicolon[8]
23: TopLevelDecl[#11] <- Keyword_extern[9] StringLiteral[6] FnProto[#13] Block[#30]
24: TopLevelDecl[#11] <- Keyword_export[10] FnProto[#13] Semicolon[8]
25: TopLevelDecl[#11] <- Keyword_inline[11] FnProto[#13] Semicolon[8]
26: TopLevelDecl[#11] <- Keyword_export[10] FnProto[#13] Block[#30]
27: TopLevelDecl[#11] <- Keyword_inline[11] FnProto[#13] Block[#30]
28: TopLevelDecl[#11] <- MaybeThreadlocal[#12] VarDecl[#14]
29: TopLevelDecl[#11] <- Keyword_extern[9] StringLiteral[6] MaybeThreadlocal[#12] VarDecl[#14]
30: TopLevelDecl[#11] <- Keyword_export[10] MaybeThreadlocal[#12] VarDecl[#14]
31: TopLevelDecl[#11] <- Keyword_extern[9] MaybeThreadlocal[#12] VarDecl[#14]
32: TopLevelDecl[#11] <- Keyword_usingnamespace[12] Expr[#28] Semicolon[8]
33: TopLevelDecl[#11] <- Keyword_use[13] Expr[#28] Semicolon[8]
34: MaybeThreadlocal[#12] <- $epsilon[0]
35: MaybeThreadlocal[#12] <- Keyword_threadlocal[14]
36: FnProto[#13] <- Keyword_fn[15] MaybeIdentifier[#79] LParen[16] MaybeParamDeclList[#69] RParen[17] MaybeByteAlign[#62] MaybeLinkSection[#43] Expr[#28]
37: FnProto[#13] <- FnCC[#44] Keyword_fn[15] MaybeIdentifier[#79] LParen[16] MaybeParamDeclList[#69] RParen[17] MaybeByteAlign[#62] MaybeLinkSection[#43] Expr[#28]
38: FnProto[#13] <- Keyword_fn[15] MaybeIdentifier[#79] LParen[16] MaybeParamDeclList[#69] RParen[17] MaybeByteAlign[#62] MaybeLinkSection[#43] Bang[18] Expr[#28]
39: FnProto[#13] <- FnCC[#44] Keyword_fn[15] MaybeIdentifier[#79] LParen[16] MaybeParamDeclList[#69] RParen[17] MaybeByteAlign[#62] MaybeLinkSection[#43] Bang[18] Expr[#28]
40: FnProto[#13] <- Keyword_fn[15] MaybeIdentifier[#79] LParen[16] MaybeParamDeclList[#69] RParen[17] MaybeByteAlign[#62] MaybeLinkSection[#43] Keyword_var[19]
41: FnProto[#13] <- FnCC[#44] Keyword_fn[15] MaybeIdentifier[#79] LParen[16] MaybeParamDeclList[#69] RParen[17] MaybeByteAlign[#62] MaybeLinkSection[#43] Keyword_var[19]
42: FnProto[#13] <- Keyword_fn[15] MaybeIdentifier[#79] LParen[16] MaybeParamDeclList[#69] RParen[17] MaybeByteAlign[#62] MaybeLinkSection[#43] Bang[18] Keyword_var[19]
43: FnProto[#13] <- FnCC[#44] Keyword_fn[15] MaybeIdentifier[#79] LParen[16] MaybeParamDeclList[#69] RParen[17] MaybeByteAlign[#62] MaybeLinkSection[#43] Bang[18] Keyword_var[19]
44: VarDecl[#14] <- Keyword_const[20] Identifier[21] MaybeColonTypeExpr[#75] MaybeByteAlign[#62] MaybeLinkSection[#43] MaybeEqualExpr[#27] Semicolon[8]
45: VarDecl[#14] <- Keyword_var[19] Identifier[21] MaybeColonTypeExpr[#75] MaybeByteAlign[#62] MaybeLinkSection[#43] MaybeEqualExpr[#27] Semicolon[8]
46: ContainerField[#15] <- Identifier[21] MaybeColonTypeExpr[#75] MaybeEqualExpr[#27]
47: MaybeStatements[#16] <- $epsilon[0]
48: MaybeStatements[#16] <- Statements[#17]
49: Statements[#17] <- Statement[#18]
50: Statements[#17] <- Statements[#17] Statement[#18]
51: Statement[#18] <- Keyword_comptime[7] VarDecl[#14]
52: Statement[#18] <- VarDecl[#14]
53: Statement[#18] <- Keyword_comptime[7] BlockExpr[#29]
54: Statement[#18] <- Keyword_suspend[22] Semicolon[8]
55: Statement[#18] <- Keyword_suspend[22] BlockExprStatement[#25]
56: Statement[#18] <- Keyword_defer[23] BlockExprStatement[#25]
57: Statement[#18] <- Keyword_errdefer[24] BlockExprStatement[#25]
58: Statement[#18] <- IfStatement[#19]
59: Statement[#18] <- MaybeInline[#78] ForStatement[#22]
60: Statement[#18] <- MaybeInline[#78] WhileStatement[#24]
61: Statement[#18] <- LabeledStatement[#21]
62: Statement[#18] <- SwitchExpr[#34]
63: Statement[#18] <- AssignExpr[#26] Semicolon[8]
64: IfStatement[#19] <- IfPrefix[#47] BlockExpr[#29]
65: IfStatement[#19] <- IfPrefix[#47] BlockExpr[#29] ElseStatement[#20]
66: IfStatement[#19] <- IfPrefix[#47] AssignExpr[#26] Semicolon[8]
67: IfStatement[#19] <- IfPrefix[#47] AssignExpr[#26] ElseStatement[#20]
68: ElseStatement[#20] <- Keyword_else[25] MaybePayload[#50] Statement[#18]
69: LabeledStatement[#21] <- BlockLabel[#31] MaybeInline[#78] ForStatement[#22]
70: LabeledStatement[#21] <- BlockLabel[#31] MaybeInline[#78] WhileStatement[#24]
71: LabeledStatement[#21] <- BlockExpr[#29]
72: ForStatement[#22] <- ForPrefix[#48] BlockExpr[#29]
73: ForStatement[#22] <- ForPrefix[#48] BlockExpr[#29] ElseNoPayloadStatement[#23]
74: ForStatement[#22] <- ForPrefix[#48] AssignExpr[#26] Semicolon[8]
75: ForStatement[#22] <- ForPrefix[#48] AssignExpr[#26] ElseNoPayloadStatement[#23]
76: ElseNoPayloadStatement[#23] <- Keyword_else[25] Statement[#18]
77: WhileStatement[#24] <- WhilePrefix[#49] BlockExpr[#29]
78: WhileStatement[#24] <- WhilePrefix[#49] BlockExpr[#29] ElseStatement[#20]
79: WhileStatement[#24] <- WhilePrefix[#49] AssignExpr[#26] Semicolon[8]
80: WhileStatement[#24] <- WhilePrefix[#49] AssignExpr[#26] ElseStatement[#20]
81: BlockExprStatement[#25] <- BlockExpr[#29]
82: BlockExprStatement[#25] <- AssignExpr[#26] Semicolon[8]
83: AssignExpr[#26] <- Expr[#28] AsteriskEqual[26] Expr[#28]
84: AssignExpr[#26] <- Expr[#28] SlashEqual[27] Expr[#28]
85: AssignExpr[#26] <- Expr[#28] PercentEqual[28] Expr[#28]
86: AssignExpr[#26] <- Expr[#28] PlusEqual[29] Expr[#28]
87: AssignExpr[#26] <- Expr[#28] MinusEqual[30] Expr[#28]
88: AssignExpr[#26] <- Expr[#28] AngleBracketAngleBracketLeftEqual[31] Expr[#28]
89: AssignExpr[#26] <- Expr[#28] AngleBracketAngleBracketRightEqual[32] Expr[#28]
90: AssignExpr[#26] <- Expr[#28] AmpersandEqual[33] Expr[#28]
91: AssignExpr[#26] <- Expr[#28] CaretEqual[34] Expr[#28]
92: AssignExpr[#26] <- Expr[#28] PipeEqual[35] Expr[#28]
93: AssignExpr[#26] <- Expr[#28] AsteriskPercentEqual[36] Expr[#28]
94: AssignExpr[#26] <- Expr[#28] PlusPercentEqual[37] Expr[#28]
95: AssignExpr[#26] <- Expr[#28] MinusPercentEqual[38] Expr[#28]
96: AssignExpr[#26] <- Expr[#28] Equal[39] Expr[#28]
97: AssignExpr[#26] <- Expr[#28]
98: MaybeEqualExpr[#27] <- $epsilon[0]
99: MaybeEqualExpr[#27] <- Equal[39] Expr[#28]
100: Expr[#28] <- Recovery[40]
101: Expr[#28] <- LParen[16] Expr[#28] RParen[17]
102: Expr[#28] <- Expr[#28] Keyword_orelse[41] Expr[#28]
103: Expr[#28] <- Expr[#28] Keyword_catch[42] MaybePayload[#50] Expr[#28]
104: Expr[#28] <- Expr[#28] Keyword_or[43] Expr[#28]
105: Expr[#28] <- Expr[#28] AmpersandAmpersand[44] Expr[#28]
106: Expr[#28] <- Expr[#28] Keyword_and[45] Expr[#28]
107: Expr[#28] <- Expr[#28] EqualEqual[46] Expr[#28]
108: Expr[#28] <- Expr[#28] BangEqual[47] Expr[#28]
109: Expr[#28] <- Expr[#28] AngleBracketLeft[48] Expr[#28]
110: Expr[#28] <- Expr[#28] AngleBracketRight[49] Expr[#28]
111: Expr[#28] <- Expr[#28] AngleBracketLeftEqual[50] Expr[#28]
112: Expr[#28] <- Expr[#28] AngleBracketRightEqual[51] Expr[#28]
113: Expr[#28] <- Expr[#28] Pipe[52] Expr[#28]
114: Expr[#28] <- Expr[#28] Caret[53] Expr[#28]
115: Expr[#28] <- Expr[#28] Ampersand[54] Expr[#28]
116: Expr[#28] <- Expr[#28] AngleBracketAngleBracketLeft[55] Expr[#28]
117: Expr[#28] <- Expr[#28] AngleBracketAngleBracketRight[56] Expr[#28]
118: Expr[#28] <- Expr[#28] Plus[57] Expr[#28]
119: Expr[#28] <- Expr[#28] Minus[58] Expr[#28]
120: Expr[#28] <- Expr[#28] PlusPlus[59] Expr[#28]
121: Expr[#28] <- Expr[#28] PlusPercent[60] Expr[#28]
122: Expr[#28] <- Expr[#28] MinusPercent[61] Expr[#28]
123: Expr[#28] <- Expr[#28] Asterisk[62] Expr[#28]
124: Expr[#28] <- Expr[#28] Slash[63] Expr[#28]
125: Expr[#28] <- Expr[#28] Percent[64] Expr[#28]
126: Expr[#28] <- Expr[#28] AsteriskAsterisk[65] Expr[#28]
127: Expr[#28] <- Expr[#28] AsteriskPercent[66] Expr[#28]
128: Expr[#28] <- Expr[#28] PipePipe[67] Expr[#28]
129: Expr[#28] <- Bang[18] Expr[#28]
130: Expr[#28] <- Minus[58] Expr[#28]
131: Expr[#28] <- MinusPercent[61] Expr[#28]
132: Expr[#28] <- Tilde[68] Expr[#28]
133: Expr[#28] <- Ampersand[54] Expr[#28]
134: Expr[#28] <- Keyword_async[69] Expr[#28]
135: Expr[#28] <- Keyword_try[70] Expr[#28]
136: Expr[#28] <- Keyword_await[71] Expr[#28]
137: Expr[#28] <- Keyword_comptime[7] Expr[#28]
138: Expr[#28] <- AsmExpr[#36]
139: Expr[#28] <- Keyword_resume[72] Expr[#28]
140: Expr[#28] <- Keyword_cancel[73] Expr[#28]
141: Expr[#28] <- Keyword_break[74]
142: Expr[#28] <- Keyword_break[74] BreakLabel[#42]
143: Expr[#28] <- Keyword_break[74] Expr[#28]
144: Expr[#28] <- Keyword_break[74] BreakLabel[#42] Expr[#28]
145: Expr[#28] <- Keyword_continue[75]
146: Expr[#28] <- Keyword_continue[75] BreakLabel[#42]
147: Expr[#28] <- Keyword_return[76]
148: Expr[#28] <- Keyword_return[76] Expr[#28]
149: Expr[#28] <- Expr[#28] LCurly[77] RBrace[78]
150: Expr[#28] <- Expr[#28] LCurly[77] InitList[#73] MaybeComma[#80] RBrace[78]
151: Expr[#28] <- QuestionMark[79] Expr[#28]
152: Expr[#28] <- Keyword_promise[80]
153: Expr[#28] <- Keyword_promise[80] MinusAngleBracketRight[81] Expr[#28]
154: Expr[#28] <- LBracket[82] Expr[#28] RBracket[83] Expr[#28]
155: Expr[#28] <- LBracket[82] RBracket[83] MaybeAllowzero[#58] MaybeAlign[#63] MaybeConst[#81] MaybeVolatile[#57] Expr[#28]
156: Expr[#28] <- Asterisk[62] MaybeAllowzero[#58] MaybeAlign[#63] MaybeConst[#81] MaybeVolatile[#57] Expr[#28]
157: Expr[#28] <- AsteriskAsterisk[65] MaybeAllowzero[#58] MaybeAlign[#63] MaybeConst[#81] MaybeVolatile[#57] Expr[#28]
158: Expr[#28] <- BracketStarBracket[84] MaybeAllowzero[#58] MaybeAlign[#63] MaybeConst[#81] MaybeVolatile[#57] Expr[#28]
159: Expr[#28] <- BracketStarCBracket[85] MaybeAllowzero[#58] MaybeAlign[#63] MaybeConst[#81] MaybeVolatile[#57] Expr[#28]
160: Expr[#28] <- BlockExpr[#29]
161: BlockExpr[#29] <- Block[#30]
162: BlockExpr[#29] <- BlockLabel[#31] Block[#30]
163: Block[#30] <- LBrace[86] MaybeStatements[#16] RBrace[78]
164: BlockLabel[#31] <- Identifier[21] Colon[87]
165: Expr[#28] <- Expr[#28] Bang[18] Expr[#28]
166: Expr[#28] <- Identifier[21]
167: Expr[#28] <- CharLiteral[88]
168: Expr[#28] <- FloatLiteral[89]
169: Expr[#28] <- IntegerLiteral[90]
170: Expr[#28] <- StringLiteral[6]
171: Expr[#28] <- MultilineStringLiteral[#82]
172: Expr[#28] <- MultilineCStringLiteral[#83]
173: Expr[#28] <- Period[91] Identifier[21]
174: Expr[#28] <- Keyword_error[92] Period[91] Identifier[21]
175: Expr[#28] <- Keyword_error[92] LCurly[77] RBrace[78]
176: Expr[#28] <- Keyword_error[92] LCurly[77] ErrorTagList[#64] MaybeComma[#80] RBrace[78]
177: Expr[#28] <- Keyword_false[93]
178: Expr[#28] <- Keyword_true[94]
179: Expr[#28] <- Keyword_null[95]
180: Expr[#28] <- Keyword_undefined[96]
181: Expr[#28] <- Keyword_unreachable[97]
182: Expr[#28] <- SwitchExpr[#34]
183: Expr[#28] <- IfPrefix[#47] Expr[#28]
184: Expr[#28] <- IfPrefix[#47] Expr[#28] Keyword_else[25] MaybePayload[#50] Expr[#28]
185: Expr[#28] <- Builtin[98] LParen[16] MaybeExprList[#71] RParen[17]
186: Expr[#28] <- FnProto[#13]
187: Expr[#28] <- Expr[#28] LBracket[82] Expr[#28] RBracket[83]
188: Expr[#28] <- Expr[#28] LBracket[82] Expr[#28] Ellipsis2[99] RBracket[83]
189: Expr[#28] <- Expr[#28] LBracket[82] Expr[#28] Ellipsis2[99] Expr[#28] RBracket[83]
190: Expr[#28] <- Expr[#28] Period[91] Identifier[21]
191: Expr[#28] <- Expr[#28] PeriodAsterisk[100]
192: Expr[#28] <- Expr[#28] PeriodQuestionMark[101]
193: Expr[#28] <- Expr[#28] LParen[16] MaybeExprList[#71] RParen[17]
194: Expr[#28] <- ContainerDecl[#32]
195: ContainerDecl[#32] <- ContainerDeclOp[#61] LBrace[86] MaybeContainerMembers[#6] RBrace[78]
196: ContainerDecl[#32] <- ExternPacked[#33] ContainerDeclOp[#61] LBrace[86] MaybeContainerMembers[#6] RBrace[78]
197: ContainerDecl[#32] <- Keyword_enum[102] ContainerDeclTypeType[#60] LBrace[86] MaybeContainerMembers[#6] RBrace[78]
198: ContainerDecl[#32] <- ExternPacked[#33] Keyword_enum[102] ContainerDeclTypeType[#60] LBrace[86] MaybeContainerMembers[#6] RBrace[78]
199: ContainerDecl[#32] <- Keyword_union[103] ContainerDeclTypeType[#60] LBrace[86] MaybeContainerMembers[#6] RBrace[78]
200: ContainerDecl[#32] <- ExternPacked[#33] Keyword_union[103] ContainerDeclTypeType[#60] LBrace[86] MaybeContainerMembers[#6] RBrace[78]
201: ContainerDecl[#32] <- Keyword_union[103] ContainerDeclTypeEnum[#59] LBrace[86] MaybeContainerMembers[#6] RBrace[78]
202: ContainerDecl[#32] <- ExternPacked[#33] Keyword_union[103] ContainerDeclTypeEnum[#59] LBrace[86] MaybeContainerMembers[#6] RBrace[78]
203: ExternPacked[#33] <- Keyword_extern[9]
204: ExternPacked[#33] <- Keyword_packed[104]
205: SwitchExpr[#34] <- Keyword_switch[105] LParen[16] Expr[#28] RParen[17] LBrace[86] SwitchProngList[#65] MaybeComma[#80] RBrace[78]
206: String[#35] <- StringLiteral[6]
207: String[#35] <- MultilineStringLiteral[#82]
208: String[#35] <- MultilineCStringLiteral[#83]
209: AsmExpr[#36] <- Keyword_asm[106] MaybeVolatile[#57] LParen[16] String[#35] RParen[17]
210: AsmExpr[#36] <- Keyword_asm[106] MaybeVolatile[#57] LParen[16] String[#35] AsmOutput[#37] RParen[17]
211: AsmExpr[#36] <- Keyword_asm[106] MaybeVolatile[#57] LParen[16] String[#35] AsmOutput[#37] AsmInput[#39] RParen[17]
212: AsmExpr[#36] <- Keyword_asm[106] MaybeVolatile[#57] LParen[16] String[#35] AsmOutput[#37] AsmInput[#39] AsmClobber[#41] RParen[17]
213: AsmOutput[#37] <- Colon[87]
214: AsmOutput[#37] <- Colon[87] AsmOutputList[#66]
215: AsmOutputItem[#38] <- LBracket[82] Identifier[21] RBracket[83] String[#35] LParen[16] Identifier[21] RParen[17]
216: AsmOutputItem[#38] <- LBracket[82] Identifier[21] RBracket[83] String[#35] LParen[16] MinusAngleBracketRight[81] Expr[#28] RParen[17]
217: AsmInput[#39] <- Colon[87]
218: AsmInput[#39] <- Colon[87] AsmInputList[#67]
219: AsmInputItem[#40] <- LBracket[82] Identifier[21] RBracket[83] String[#35] LParen[16] Expr[#28] RParen[17]
220: AsmClobber[#41] <- Colon[87]
221: AsmClobber[#41] <- Colon[87] StringList[#68]
222: BreakLabel[#42] <- Colon[87] Identifier[21]
223: MaybeLinkSection[#43] <- $epsilon[0]
224: MaybeLinkSection[#43] <- Keyword_linksection[107] LParen[16] Expr[#28] RParen[17]
225: FnCC[#44] <- Keyword_nakedcc[108]
226: FnCC[#44] <- Keyword_stdcallcc[109]
227: FnCC[#44] <- Keyword_extern[9]
228: FnCC[#44] <- Keyword_async[69]
229: ParamDecl[#45] <- MaybeNoalias[#77] ParamType[#46]
230: ParamDecl[#45] <- MaybeNoalias[#77] Identifier[21] Colon[87] ParamType[#46]
231: ParamDecl[#45] <- MaybeNoalias[#77] Keyword_comptime[7] Identifier[21] Colon[87] ParamType[#46]
232: ParamType[#46] <- Keyword_var[19]
233: ParamType[#46] <- Ellipsis3[110]
234: ParamType[#46] <- Expr[#28]
235: IfPrefix[#47] <- Keyword_if[111] LParen[16] Expr[#28] RParen[17] MaybePtrPayload[#51]
236: ForPrefix[#48] <- Keyword_for[112] LParen[16] Expr[#28] RParen[17] PtrIndexPayload[#52]
237: WhilePrefix[#49] <- Keyword_while[113] LParen[16] Expr[#28] RParen[17] MaybePtrPayload[#51]
238: WhilePrefix[#49] <- Keyword_while[113] LParen[16] Expr[#28] RParen[17] MaybePtrPayload[#51] Colon[87] LParen[16] AssignExpr[#26] RParen[17]
239: MaybePayload[#50] <- $epsilon[0]
240: MaybePayload[#50] <- Pipe[52] Identifier[21] Pipe[52]
241: MaybePtrPayload[#51] <- $epsilon[0]
242: MaybePtrPayload[#51] <- Pipe[52] Identifier[21] Pipe[52]
243: MaybePtrPayload[#51] <- Pipe[52] Asterisk[62] Identifier[21] Pipe[52]
244: PtrIndexPayload[#52] <- Pipe[52] Identifier[21] Pipe[52]
245: PtrIndexPayload[#52] <- Pipe[52] Asterisk[62] Identifier[21] Pipe[52]
246: PtrIndexPayload[#52] <- Pipe[52] Identifier[21] Comma[4] Identifier[21] Pipe[52]
247: PtrIndexPayload[#52] <- Pipe[52] Asterisk[62] Identifier[21] Comma[4] Identifier[21] Pipe[52]
248: SwitchProng[#53] <- SwitchCase[#54] EqualAngleBracketRight[114] MaybePtrPayload[#51] AssignExpr[#26]
249: SwitchCase[#54] <- Keyword_else[25]
250: SwitchCase[#54] <- SwitchItems[#55] MaybeComma[#80]
251: SwitchItems[#55] <- SwitchItem[#56]
252: SwitchItems[#55] <- SwitchItems[#55] Comma[4] SwitchItem[#56]
253: SwitchItem[#56] <- Expr[#28]
254: SwitchItem[#56] <- Expr[#28] Ellipsis3[110] Expr[#28]
255: MaybeVolatile[#57] <- $epsilon[0]
256: MaybeVolatile[#57] <- Keyword_volatile[115]
257: MaybeAllowzero[#58] <- $epsilon[0]
258: MaybeAllowzero[#58] <- Keyword_allowzero[116]
259: ContainerDeclTypeEnum[#59] <- LParen[16] Keyword_enum[102] RParen[17]
260: ContainerDeclTypeEnum[#59] <- LParen[16] Keyword_enum[102] LParen[16] Expr[#28] RParen[17] RParen[17]
261: ContainerDeclTypeType[#60] <- LParen[16] Expr[#28] RParen[17]
262: ContainerDeclOp[#61] <- Keyword_struct[117]
263: ContainerDeclOp[#61] <- Keyword_union[103]
264: ContainerDeclOp[#61] <- Keyword_enum[102]
265: MaybeByteAlign[#62] <- $epsilon[0]
266: MaybeByteAlign[#62] <- Keyword_align[118] LParen[16] Expr[#28] RParen[17]
267: MaybeAlign[#63] <- $epsilon[0]
268: MaybeAlign[#63] <- Keyword_align[118] LParen[16] Expr[#28] RParen[17]
269: MaybeAlign[#63] <- Keyword_align[118] LParen[16] Expr[#28] Colon[87] IntegerLiteral[90] Colon[87] IntegerLiteral[90] RParen[17]
270: MaybeAlign[#63] <- Keyword_align[118] LParen[16] Identifier[21] Colon[87] IntegerLiteral[90] Colon[87] IntegerLiteral[90] RParen[17]
271: ErrorTagList[#64] <- MaybeDocComment[#2] Identifier[21]
272: ErrorTagList[#64] <- ErrorTagList[#64] Comma[4] MaybeDocComment[#2] Identifier[21]
273: SwitchProngList[#65] <- SwitchProng[#53]
274: SwitchProngList[#65] <- SwitchProngList[#65] Comma[4] SwitchProng[#53]
275: AsmOutputList[#66] <- AsmOutputItem[#38]
276: AsmOutputList[#66] <- AsmOutputList[#66] Comma[4] AsmOutputItem[#38]
277: AsmInputList[#67] <- AsmInputItem[#40]
278: AsmInputList[#67] <- AsmInputList[#67] Comma[4] AsmInputItem[#40]
279: StringList[#68] <- StringLiteral[6]
280: StringList[#68] <- StringList[#68] Comma[4] StringLiteral[6]
281: MaybeParamDeclList[#69] <- $epsilon[0]
282: MaybeParamDeclList[#69] <- ParamDeclList[#70] MaybeComma[#80]
283: ParamDeclList[#70] <- MaybeDocComment[#2] ParamDecl[#45]
284: ParamDeclList[#70] <- ParamDeclList[#70] Comma[4] MaybeDocComment[#2] ParamDecl[#45]
285: MaybeExprList[#71] <- $epsilon[0]
286: MaybeExprList[#71] <- ExprList[#72] MaybeComma[#80]
287: ExprList[#72] <- Expr[#28]
288: ExprList[#72] <- ExprList[#72] Comma[4] Expr[#28]
289: InitList[#73] <- Expr[#28]
290: InitList[#73] <- Period[91] Identifier[21] Equal[39] Expr[#28]
291: InitList[#73] <- InitList[#73] Comma[4] Expr[#28]
292: InitList[#73] <- InitList[#73] Comma[4] Period[91] Identifier[21] Equal[39] Expr[#28]
293: MaybePub[#74] <- $epsilon[0]
294: MaybePub[#74] <- Keyword_pub[119]
295: MaybeColonTypeExpr[#75] <- $epsilon[0]
296: MaybeColonTypeExpr[#75] <- Colon[87] Expr[#28]
297: MaybeExpr[#76] <- $epsilon[0]
298: MaybeExpr[#76] <- Expr[#28]
299: MaybeNoalias[#77] <- $epsilon[0]
300: MaybeNoalias[#77] <- Keyword_noalias[120]
301: MaybeInline[#78] <- $epsilon[0]
302: MaybeInline[#78] <- Keyword_inline[11]
303: MaybeIdentifier[#79] <- $epsilon[0]
304: MaybeIdentifier[#79] <- Identifier[21]
305: MaybeComma[#80] <- $epsilon[0]
306: MaybeComma[#80] <- Comma[4]
307: MaybeConst[#81] <- $epsilon[0]
308: MaybeConst[#81] <- Keyword_const[20]
309: MultilineStringLiteral[#82] <- LineString[121]
310: MultilineStringLiteral[#82] <- MultilineStringLiteral[#82] LineString[121]
311: MultilineCStringLiteral[#83] <- LineCString[122]
312: MultilineCStringLiteral[#83] <- MultilineCStringLiteral[#83] LineCString[122]
