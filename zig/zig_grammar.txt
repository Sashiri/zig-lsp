0: $accept[#0] <- Root[#1] $eof[1]
1: Root[#1] <- MaybeRootDocComment[#4] MaybeContainerMembers[#6]
2: MaybeDocComment[#2] <- $epsilon[0]
3: MaybeDocComment[#2] <- DocCommentLines[#3]
4: DocCommentLines[#3] <- DocCommentLines[#3] DocComment[2]
5: DocCommentLines[#3] <- DocComment[2]
6: MaybeRootDocComment[#4] <- $epsilon[0]
7: MaybeRootDocComment[#4] <- RootDocCommentLines[#5]
8: RootDocCommentLines[#5] <- RootDocCommentLines[#5] RootDocComment[3]
9: RootDocCommentLines[#5] <- RootDocComment[3]
10: MaybeContainerMembers[#6] <- $epsilon[0]
11: MaybeContainerMembers[#6] <- ContainerMembers[#7]
12: ContainerMembers[#7] <- ContainerMembers[#7] ContainerMember[#8]
13: ContainerMembers[#7] <- ContainerMember[#8]
14: ContainerMember[#8] <- MaybeDocComment[#2] TestDecl[#9]
15: ContainerMember[#8] <- MaybeDocComment[#2] TopLevelComptime[#10]
16: ContainerMember[#8] <- MaybeDocComment[#2] MaybePub[#75] TopLevelDecl[#11]
17: ContainerMember[#8] <- MaybeDocComment[#2] MaybePub[#75] ContainerField[#16] Comma[4]
18: TestDecl[#9] <- Keyword_test[5] StringLiteral[6] Block[#31]
19: TopLevelComptime[#10] <- Keyword_comptime[7] BlockExpr[#30]
20: TopLevelDecl[#11] <- FnProto[#13] Semicolon[8]
21: TopLevelDecl[#11] <- FnProto[#13] Block[#31]
22: TopLevelDecl[#11] <- AsyncPrefix[#14] FnProto[#13] Semicolon[8]
23: TopLevelDecl[#11] <- AsyncPrefix[#14] FnProto[#13] Block[#31]
24: TopLevelDecl[#11] <- Keyword_extern[9] StringLiteral[6] FnProto[#13] Semicolon[8]
25: TopLevelDecl[#11] <- Keyword_extern[9] StringLiteral[6] FnProto[#13] Block[#31]
26: TopLevelDecl[#11] <- Keyword_export[10] FnProto[#13] Semicolon[8]
27: TopLevelDecl[#11] <- Keyword_inline[11] FnProto[#13] Semicolon[8]
28: TopLevelDecl[#11] <- Keyword_export[10] FnProto[#13] Block[#31]
29: TopLevelDecl[#11] <- Keyword_inline[11] FnProto[#13] Block[#31]
30: TopLevelDecl[#11] <- MaybeThreadlocal[#12] VarDecl[#15]
31: TopLevelDecl[#11] <- Keyword_extern[9] StringLiteral[6] MaybeThreadlocal[#12] VarDecl[#15]
32: TopLevelDecl[#11] <- Keyword_export[10] MaybeThreadlocal[#12] VarDecl[#15]
33: TopLevelDecl[#11] <- Keyword_extern[9] MaybeThreadlocal[#12] VarDecl[#15]
34: TopLevelDecl[#11] <- Keyword_usingnamespace[12] Expr[#29] Semicolon[8]
35: TopLevelDecl[#11] <- Keyword_use[13] Expr[#29] Semicolon[8]
36: MaybeThreadlocal[#12] <- $epsilon[0]
37: MaybeThreadlocal[#12] <- Keyword_threadlocal[14]
38: FnProto[#13] <- MaybeFnCC[#45] Keyword_fn[15] MaybeIdentifier[#80] LParen[16] MaybeParamDeclList[#70] RParen[17] MaybeByteAlign[#63] MaybeLinkSection[#44] Expr[#29]
39: FnProto[#13] <- MaybeFnCC[#45] Keyword_fn[15] MaybeIdentifier[#80] LParen[16] MaybeParamDeclList[#70] RParen[17] MaybeByteAlign[#63] MaybeLinkSection[#44] Bang[18] Expr[#29]
40: FnProto[#13] <- MaybeFnCC[#45] Keyword_fn[15] MaybeIdentifier[#80] LParen[16] MaybeParamDeclList[#70] RParen[17] MaybeByteAlign[#63] MaybeLinkSection[#44] Keyword_var[19]
41: FnProto[#13] <- MaybeFnCC[#45] Keyword_fn[15] MaybeIdentifier[#80] LParen[16] MaybeParamDeclList[#70] RParen[17] MaybeByteAlign[#63] MaybeLinkSection[#44] Bang[18] Keyword_var[19]
42: AsyncPrefix[#14] <- Keyword_async[20]
43: AsyncPrefix[#14] <- Keyword_async[20] LParen[16] Expr[#29] RParen[17]
44: VarDecl[#15] <- Keyword_const[21] Identifier[22] MaybeColonTypeExpr[#76] MaybeByteAlign[#63] MaybeLinkSection[#44] MaybeEqualExpr[#28] Semicolon[8]
45: VarDecl[#15] <- Keyword_var[19] Identifier[22] MaybeColonTypeExpr[#76] MaybeByteAlign[#63] MaybeLinkSection[#44] MaybeEqualExpr[#28] Semicolon[8]
46: ContainerField[#16] <- Identifier[22] MaybeColonTypeExpr[#76] MaybeEqualExpr[#28]
47: MaybeStatements[#17] <- $epsilon[0]
48: MaybeStatements[#17] <- Statements[#18]
49: Statements[#18] <- Statement[#19]
50: Statements[#18] <- Statements[#18] Statement[#19]
51: Statement[#19] <- Keyword_comptime[7] VarDecl[#15]
52: Statement[#19] <- VarDecl[#15]
53: Statement[#19] <- Keyword_comptime[7] BlockExpr[#30]
54: Statement[#19] <- Keyword_suspend[23] Semicolon[8]
55: Statement[#19] <- Keyword_suspend[23] BlockExprStatement[#26]
56: Statement[#19] <- Keyword_defer[24] BlockExprStatement[#26]
57: Statement[#19] <- Keyword_errdefer[25] BlockExprStatement[#26]
58: Statement[#19] <- IfStatement[#20]
59: Statement[#19] <- MaybeInline[#79] ForStatement[#23]
60: Statement[#19] <- MaybeInline[#79] WhileStatement[#25]
61: Statement[#19] <- LabeledStatement[#22]
62: Statement[#19] <- SwitchExpr[#35]
63: Statement[#19] <- AssignExpr[#27] Semicolon[8]
64: IfStatement[#20] <- IfPrefix[#48] BlockExpr[#30]
65: IfStatement[#20] <- IfPrefix[#48] BlockExpr[#30] ElseStatement[#21]
66: IfStatement[#20] <- IfPrefix[#48] AssignExpr[#27] Semicolon[8]
67: IfStatement[#20] <- IfPrefix[#48] AssignExpr[#27] ElseStatement[#21]
68: ElseStatement[#21] <- Keyword_else[26] MaybePayload[#51] Statement[#19]
69: LabeledStatement[#22] <- BlockLabel[#32] MaybeInline[#79] ForStatement[#23]
70: LabeledStatement[#22] <- BlockLabel[#32] MaybeInline[#79] WhileStatement[#25]
71: LabeledStatement[#22] <- BlockExpr[#30]
72: ForStatement[#23] <- ForPrefix[#49] BlockExpr[#30]
73: ForStatement[#23] <- ForPrefix[#49] BlockExpr[#30] ElseNoPayloadStatement[#24]
74: ForStatement[#23] <- ForPrefix[#49] AssignExpr[#27] Semicolon[8]
75: ForStatement[#23] <- ForPrefix[#49] AssignExpr[#27] ElseNoPayloadStatement[#24]
76: ElseNoPayloadStatement[#24] <- Keyword_else[26] Statement[#19]
77: WhileStatement[#25] <- WhilePrefix[#50] BlockExpr[#30]
78: WhileStatement[#25] <- WhilePrefix[#50] BlockExpr[#30] ElseStatement[#21]
79: WhileStatement[#25] <- WhilePrefix[#50] AssignExpr[#27] Semicolon[8]
80: WhileStatement[#25] <- WhilePrefix[#50] AssignExpr[#27] ElseStatement[#21]
81: BlockExprStatement[#26] <- BlockExpr[#30]
82: BlockExprStatement[#26] <- AssignExpr[#27] Semicolon[8]
83: AssignExpr[#27] <- Expr[#29] AsteriskEqual[27] Expr[#29]
84: AssignExpr[#27] <- Expr[#29] SlashEqual[28] Expr[#29]
85: AssignExpr[#27] <- Expr[#29] PercentEqual[29] Expr[#29]
86: AssignExpr[#27] <- Expr[#29] PlusEqual[30] Expr[#29]
87: AssignExpr[#27] <- Expr[#29] MinusEqual[31] Expr[#29]
88: AssignExpr[#27] <- Expr[#29] AngleBracketAngleBracketLeftEqual[32] Expr[#29]
89: AssignExpr[#27] <- Expr[#29] AngleBracketAngleBracketRightEqual[33] Expr[#29]
90: AssignExpr[#27] <- Expr[#29] AmpersandEqual[34] Expr[#29]
91: AssignExpr[#27] <- Expr[#29] CaretEqual[35] Expr[#29]
92: AssignExpr[#27] <- Expr[#29] PipeEqual[36] Expr[#29]
93: AssignExpr[#27] <- Expr[#29] AsteriskPercentEqual[37] Expr[#29]
94: AssignExpr[#27] <- Expr[#29] PlusPercentEqual[38] Expr[#29]
95: AssignExpr[#27] <- Expr[#29] MinusPercentEqual[39] Expr[#29]
96: AssignExpr[#27] <- Expr[#29] Equal[40] Expr[#29]
97: AssignExpr[#27] <- Expr[#29]
98: MaybeEqualExpr[#28] <- $epsilon[0]
99: MaybeEqualExpr[#28] <- Equal[40] Expr[#29]
100: Expr[#29] <- AsyncPrefix[#14] Expr[#29]
101: Expr[#29] <- Recovery[41]
102: Expr[#29] <- LParen[16] Expr[#29] RParen[17]
103: Expr[#29] <- Expr[#29] Keyword_orelse[42] Expr[#29]
104: Expr[#29] <- Expr[#29] Keyword_catch[43] MaybePayload[#51] Expr[#29]
105: Expr[#29] <- Expr[#29] Keyword_or[44] Expr[#29]
106: Expr[#29] <- Expr[#29] Keyword_and[45] Expr[#29]
107: Expr[#29] <- Expr[#29] EqualEqual[46] Expr[#29]
108: Expr[#29] <- Expr[#29] BangEqual[47] Expr[#29]
109: Expr[#29] <- Expr[#29] AngleBracketLeft[48] Expr[#29]
110: Expr[#29] <- Expr[#29] AngleBracketRight[49] Expr[#29]
111: Expr[#29] <- Expr[#29] AngleBracketLeftEqual[50] Expr[#29]
112: Expr[#29] <- Expr[#29] AngleBracketRightEqual[51] Expr[#29]
113: Expr[#29] <- Expr[#29] Pipe[52] Expr[#29]
114: Expr[#29] <- Expr[#29] Caret[53] Expr[#29]
115: Expr[#29] <- Expr[#29] Ampersand[54] Expr[#29]
116: Expr[#29] <- Expr[#29] AngleBracketAngleBracketLeft[55] Expr[#29]
117: Expr[#29] <- Expr[#29] AngleBracketAngleBracketRight[56] Expr[#29]
118: Expr[#29] <- Expr[#29] Plus[57] Expr[#29]
119: Expr[#29] <- Expr[#29] Minus[58] Expr[#29]
120: Expr[#29] <- Expr[#29] PlusPlus[59] Expr[#29]
121: Expr[#29] <- Expr[#29] PlusPercent[60] Expr[#29]
122: Expr[#29] <- Expr[#29] MinusPercent[61] Expr[#29]
123: Expr[#29] <- Expr[#29] Asterisk[62] Expr[#29]
124: Expr[#29] <- Expr[#29] Slash[63] Expr[#29]
125: Expr[#29] <- Expr[#29] Percent[64] Expr[#29]
126: Expr[#29] <- Expr[#29] AsteriskAsterisk[65] Expr[#29]
127: Expr[#29] <- Expr[#29] AsteriskPercent[66] Expr[#29]
128: Expr[#29] <- Expr[#29] PipePipe[67] Expr[#29]
129: Expr[#29] <- Bang[18] Expr[#29]
130: Expr[#29] <- Minus[58] Expr[#29]
131: Expr[#29] <- MinusPercent[61] Expr[#29]
132: Expr[#29] <- Tilde[68] Expr[#29]
133: Expr[#29] <- Ampersand[54] Expr[#29]
134: Expr[#29] <- Keyword_try[69] Expr[#29]
135: Expr[#29] <- Keyword_await[70] Expr[#29]
136: Expr[#29] <- Keyword_comptime[7] Expr[#29]
137: Expr[#29] <- AsmExpr[#37]
138: Expr[#29] <- Keyword_resume[71] Expr[#29]
139: Expr[#29] <- Keyword_cancel[72] Expr[#29]
140: Expr[#29] <- Keyword_break[73]
141: Expr[#29] <- Keyword_break[73] BreakLabel[#43]
142: Expr[#29] <- Keyword_break[73] Expr[#29]
143: Expr[#29] <- Keyword_break[73] BreakLabel[#43] Expr[#29]
144: Expr[#29] <- Keyword_continue[74]
145: Expr[#29] <- Keyword_continue[74] BreakLabel[#43]
146: Expr[#29] <- Keyword_return[75]
147: Expr[#29] <- Keyword_return[75] Expr[#29]
148: Expr[#29] <- Expr[#29] LCurly[76] RBrace[77]
149: Expr[#29] <- Expr[#29] LCurly[76] InitList[#74] MaybeComma[#81] RBrace[77]
150: Expr[#29] <- QuestionMark[78] Expr[#29]
151: Expr[#29] <- Keyword_promise[79]
152: Expr[#29] <- Keyword_promise[79] MinusAngleBracketRight[80] Expr[#29]
153: Expr[#29] <- LBracket[81] Expr[#29] RBracket[82] Expr[#29]
154: Expr[#29] <- LBracket[81] RBracket[82] MaybeAllowzero[#59] MaybeAlign[#64] MaybeConst[#82] MaybeVolatile[#58] Expr[#29]
155: Expr[#29] <- Asterisk[62] MaybeAllowzero[#59] MaybeAlign[#64] MaybeConst[#82] MaybeVolatile[#58] Expr[#29]
156: Expr[#29] <- AsteriskAsterisk[65] MaybeAllowzero[#59] MaybeAlign[#64] MaybeConst[#82] MaybeVolatile[#58] Expr[#29]
157: Expr[#29] <- BracketStarBracket[83] MaybeAllowzero[#59] MaybeAlign[#64] MaybeConst[#82] MaybeVolatile[#58] Expr[#29]
158: Expr[#29] <- BracketStarCBracket[84] MaybeAllowzero[#59] MaybeAlign[#64] MaybeConst[#82] MaybeVolatile[#58] Expr[#29]
159: Expr[#29] <- BlockExpr[#30]
160: BlockExpr[#30] <- Block[#31]
161: BlockExpr[#30] <- BlockLabel[#32] Block[#31]
162: Block[#31] <- LBrace[85] MaybeStatements[#17] RBrace[77]
163: BlockLabel[#32] <- Identifier[22] Colon[86]
164: Expr[#29] <- Expr[#29] Bang[18] Expr[#29]
165: Expr[#29] <- Identifier[22]
166: Expr[#29] <- CharLiteral[87]
167: Expr[#29] <- FloatLiteral[88]
168: Expr[#29] <- IntegerLiteral[89]
169: Expr[#29] <- StringLiteral[6]
170: Expr[#29] <- MultilineStringLiteral[#83]
171: Expr[#29] <- MultilineCStringLiteral[#84]
172: Expr[#29] <- Period[90] Identifier[22]
173: Expr[#29] <- Keyword_error[91] Period[90] Identifier[22]
174: Expr[#29] <- Keyword_error[91] LCurly[76] RBrace[77]
175: Expr[#29] <- Keyword_error[91] LCurly[76] ErrorTagList[#65] MaybeComma[#81] RBrace[77]
176: Expr[#29] <- Keyword_false[92]
177: Expr[#29] <- Keyword_true[93]
178: Expr[#29] <- Keyword_null[94]
179: Expr[#29] <- Keyword_undefined[95]
180: Expr[#29] <- Keyword_unreachable[96]
181: Expr[#29] <- SwitchExpr[#35]
182: Expr[#29] <- IfPrefix[#48] Expr[#29]
183: Expr[#29] <- IfPrefix[#48] Expr[#29] Keyword_else[26] MaybePayload[#51] Expr[#29]
184: Expr[#29] <- Builtin[97] LParen[16] MaybeExprList[#72] RParen[17]
185: Expr[#29] <- FnProto[#13]
186: Expr[#29] <- Expr[#29] LBracket[81] Expr[#29] RBracket[82]
187: Expr[#29] <- Expr[#29] LBracket[81] Expr[#29] Ellipsis2[98] RBracket[82]
188: Expr[#29] <- Expr[#29] LBracket[81] Expr[#29] Ellipsis2[98] Expr[#29] RBracket[82]
189: Expr[#29] <- Expr[#29] Period[90] Identifier[22]
190: Expr[#29] <- Expr[#29] PeriodAsterisk[99]
191: Expr[#29] <- Expr[#29] PeriodQuestionMark[100]
192: Expr[#29] <- Expr[#29] LParen[16] MaybeExprList[#72] RParen[17]
193: Expr[#29] <- ContainerDecl[#33]
194: ContainerDecl[#33] <- MaybeExternPacked[#34] ContainerDeclOp[#62] LBrace[85] MaybeContainerMembers[#6] RBrace[77]
195: ContainerDecl[#33] <- MaybeExternPacked[#34] Keyword_enum[101] ContainerDeclTypeType[#61] LBrace[85] MaybeContainerMembers[#6] RBrace[77]
196: ContainerDecl[#33] <- MaybeExternPacked[#34] Keyword_union[102] ContainerDeclTypeType[#61] LBrace[85] MaybeContainerMembers[#6] RBrace[77]
197: ContainerDecl[#33] <- MaybeExternPacked[#34] Keyword_union[102] ContainerDeclTypeEnum[#60] LBrace[85] MaybeContainerMembers[#6] RBrace[77]
198: MaybeExternPacked[#34] <- $epsilon[0]
199: MaybeExternPacked[#34] <- Keyword_extern[9]
200: MaybeExternPacked[#34] <- Keyword_packed[103]
201: SwitchExpr[#35] <- Keyword_switch[104] LParen[16] Expr[#29] RParen[17] LBrace[85] SwitchProngList[#66] MaybeComma[#81] RBrace[77]
202: String[#36] <- StringLiteral[6]
203: String[#36] <- MultilineStringLiteral[#83]
204: String[#36] <- MultilineCStringLiteral[#84]
205: AsmExpr[#37] <- Keyword_asm[105] MaybeVolatile[#58] LParen[16] String[#36] RParen[17]
206: AsmExpr[#37] <- Keyword_asm[105] MaybeVolatile[#58] LParen[16] String[#36] AsmOutput[#38] RParen[17]
207: AsmExpr[#37] <- Keyword_asm[105] MaybeVolatile[#58] LParen[16] String[#36] AsmOutput[#38] AsmInput[#40] RParen[17]
208: AsmExpr[#37] <- Keyword_asm[105] MaybeVolatile[#58] LParen[16] String[#36] AsmOutput[#38] AsmInput[#40] AsmClobber[#42] RParen[17]
209: AsmOutput[#38] <- Colon[86]
210: AsmOutput[#38] <- Colon[86] AsmOutputList[#67]
211: AsmOutputItem[#39] <- LBracket[81] Identifier[22] RBracket[82] String[#36] LParen[16] Identifier[22] RParen[17]
212: AsmOutputItem[#39] <- LBracket[81] Identifier[22] RBracket[82] String[#36] LParen[16] MinusAngleBracketRight[80] Expr[#29] RParen[17]
213: AsmInput[#40] <- Colon[86]
214: AsmInput[#40] <- Colon[86] AsmInputList[#68]
215: AsmInputItem[#41] <- LBracket[81] Identifier[22] RBracket[82] String[#36] LParen[16] Expr[#29] RParen[17]
216: AsmClobber[#42] <- Colon[86]
217: AsmClobber[#42] <- Colon[86] StringList[#69]
218: BreakLabel[#43] <- Colon[86] Identifier[22]
219: MaybeLinkSection[#44] <- $epsilon[0]
220: MaybeLinkSection[#44] <- Keyword_linksection[106] LParen[16] Expr[#29] RParen[17]
221: MaybeFnCC[#45] <- $epsilon[0]
222: MaybeFnCC[#45] <- Keyword_nakedcc[107]
223: MaybeFnCC[#45] <- Keyword_stdcallcc[108]
224: MaybeFnCC[#45] <- Keyword_extern[9]
225: ParamDecl[#46] <- MaybeNoalias[#78] ParamType[#47]
226: ParamDecl[#46] <- MaybeNoalias[#78] Identifier[22] Colon[86] ParamType[#47]
227: ParamDecl[#46] <- MaybeNoalias[#78] Keyword_comptime[7] Identifier[22] Colon[86] ParamType[#47]
228: ParamType[#47] <- Keyword_var[19]
229: ParamType[#47] <- Ellipsis3[109]
230: ParamType[#47] <- Expr[#29]
231: IfPrefix[#48] <- Keyword_if[110] LParen[16] Expr[#29] RParen[17] MaybePtrPayload[#52]
232: ForPrefix[#49] <- Keyword_for[111] LParen[16] Expr[#29] RParen[17] PtrIndexPayload[#53]
233: WhilePrefix[#50] <- Keyword_while[112] LParen[16] Expr[#29] RParen[17] MaybePtrPayload[#52]
234: WhilePrefix[#50] <- Keyword_while[112] LParen[16] Expr[#29] RParen[17] MaybePtrPayload[#52] Colon[86] LParen[16] AssignExpr[#27] RParen[17]
235: MaybePayload[#51] <- $epsilon[0]
236: MaybePayload[#51] <- Pipe[52] Identifier[22] Pipe[52]
237: MaybePtrPayload[#52] <- $epsilon[0]
238: MaybePtrPayload[#52] <- Pipe[52] Identifier[22] Pipe[52]
239: MaybePtrPayload[#52] <- Pipe[52] Asterisk[62] Identifier[22] Pipe[52]
240: PtrIndexPayload[#53] <- Pipe[52] Identifier[22] Pipe[52]
241: PtrIndexPayload[#53] <- Pipe[52] Asterisk[62] Identifier[22] Pipe[52]
242: PtrIndexPayload[#53] <- Pipe[52] Identifier[22] Comma[4] Identifier[22] Pipe[52]
243: PtrIndexPayload[#53] <- Pipe[52] Asterisk[62] Identifier[22] Comma[4] Identifier[22] Pipe[52]
244: SwitchProng[#54] <- SwitchCase[#55] EqualAngleBracketRight[113] MaybePtrPayload[#52] AssignExpr[#27]
245: SwitchCase[#55] <- Keyword_else[26]
246: SwitchCase[#55] <- SwitchItems[#56] MaybeComma[#81]
247: SwitchItems[#56] <- SwitchItem[#57]
248: SwitchItems[#56] <- SwitchItems[#56] Comma[4] SwitchItem[#57]
249: SwitchItem[#57] <- Expr[#29]
250: SwitchItem[#57] <- Expr[#29] Ellipsis3[109] Expr[#29]
251: MaybeVolatile[#58] <- $epsilon[0]
252: MaybeVolatile[#58] <- Keyword_volatile[114]
253: MaybeAllowzero[#59] <- $epsilon[0]
254: MaybeAllowzero[#59] <- Keyword_allowzero[115]
255: ContainerDeclTypeEnum[#60] <- LParen[16] Keyword_enum[101] RParen[17]
256: ContainerDeclTypeEnum[#60] <- LParen[16] Keyword_enum[101] LParen[16] Expr[#29] RParen[17] RParen[17]
257: ContainerDeclTypeType[#61] <- LParen[16] Expr[#29] RParen[17]
258: ContainerDeclOp[#62] <- Keyword_struct[116]
259: ContainerDeclOp[#62] <- Keyword_union[102]
260: ContainerDeclOp[#62] <- Keyword_enum[101]
261: MaybeByteAlign[#63] <- $epsilon[0]
262: MaybeByteAlign[#63] <- Keyword_align[117] LParen[16] Expr[#29] RParen[17]
263: MaybeAlign[#64] <- $epsilon[0]
264: MaybeAlign[#64] <- Keyword_align[117] LParen[16] Expr[#29] RParen[17]
265: MaybeAlign[#64] <- Keyword_align[117] LParen[16] Expr[#29] Colon[86] IntegerLiteral[89] Colon[86] IntegerLiteral[89] RParen[17]
266: MaybeAlign[#64] <- Keyword_align[117] LParen[16] Identifier[22] Colon[86] IntegerLiteral[89] Colon[86] IntegerLiteral[89] RParen[17]
267: ErrorTagList[#65] <- MaybeDocComment[#2] Identifier[22]
268: ErrorTagList[#65] <- ErrorTagList[#65] Comma[4] MaybeDocComment[#2] Identifier[22]
269: SwitchProngList[#66] <- SwitchProng[#54]
270: SwitchProngList[#66] <- SwitchProngList[#66] Comma[4] SwitchProng[#54]
271: AsmOutputList[#67] <- AsmOutputItem[#39]
272: AsmOutputList[#67] <- AsmOutputList[#67] Comma[4] AsmOutputItem[#39]
273: AsmInputList[#68] <- AsmInputItem[#41]
274: AsmInputList[#68] <- AsmInputList[#68] Comma[4] AsmInputItem[#41]
275: StringList[#69] <- StringLiteral[6]
276: StringList[#69] <- StringList[#69] Comma[4] StringLiteral[6]
277: MaybeParamDeclList[#70] <- $epsilon[0]
278: MaybeParamDeclList[#70] <- ParamDeclList[#71] MaybeComma[#81]
279: ParamDeclList[#71] <- MaybeDocComment[#2] ParamDecl[#46]
280: ParamDeclList[#71] <- ParamDeclList[#71] Comma[4] MaybeDocComment[#2] ParamDecl[#46]
281: MaybeExprList[#72] <- $epsilon[0]
282: MaybeExprList[#72] <- ExprList[#73] MaybeComma[#81]
283: ExprList[#73] <- Expr[#29]
284: ExprList[#73] <- ExprList[#73] Comma[4] Expr[#29]
285: InitList[#74] <- Expr[#29]
286: InitList[#74] <- Period[90] Identifier[22] Equal[40] Expr[#29]
287: InitList[#74] <- InitList[#74] Comma[4] Expr[#29]
288: InitList[#74] <- InitList[#74] Comma[4] Period[90] Identifier[22] Equal[40] Expr[#29]
289: MaybePub[#75] <- $epsilon[0]
290: MaybePub[#75] <- Keyword_pub[118]
291: MaybeColonTypeExpr[#76] <- $epsilon[0]
292: MaybeColonTypeExpr[#76] <- Colon[86] Expr[#29]
293: MaybeExpr[#77] <- $epsilon[0]
294: MaybeExpr[#77] <- Expr[#29]
295: MaybeNoalias[#78] <- $epsilon[0]
296: MaybeNoalias[#78] <- Keyword_noalias[119]
297: MaybeInline[#79] <- $epsilon[0]
298: MaybeInline[#79] <- Keyword_inline[11]
299: MaybeIdentifier[#80] <- $epsilon[0]
300: MaybeIdentifier[#80] <- Identifier[22]
301: MaybeComma[#81] <- $epsilon[0]
302: MaybeComma[#81] <- Comma[4]
303: MaybeConst[#82] <- $epsilon[0]
304: MaybeConst[#82] <- Keyword_const[21]
305: MultilineStringLiteral[#83] <- LineString[120]
306: MultilineStringLiteral[#83] <- MultilineStringLiteral[#83] LineString[120]
307: MultilineCStringLiteral[#84] <- LineCString[121]
308: MultilineCStringLiteral[#84] <- MultilineCStringLiteral[#84] LineCString[121]
